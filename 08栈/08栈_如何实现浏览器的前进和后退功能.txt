栈是一种操作受限的线性表

当某个数据集合只涉及在一端插入和删除数据，
并且满足后进先出、先进后出的特性，
我们就应该首选“栈”这种数据结构。

栈既可以用数组来实现，也可以用链表来实现。用数组实现的栈，
我们叫作顺序栈，用链表实现的栈，我们叫作链式栈。

//基于数组实现的顺序栈
public class ArrayStack{
	private String[] items;//数组
	private int count;//栈中元素个数
	private int n;//栈大小
	
	//初始化数组，申请一个大小为n的数组空间
	public ArrayStack(int n){
		this.item = new String[n];
		this.n = n;
		this.count = 0;
	}
	
	//入栈操作
	public boolean push(String item){
		//数组空间不够，返回false，入栈失败
		if(count==n) return false;
		//将item放到下标为count的位置，count++
		items[count] = item;
		++count;
		return true;
	}
	
	//出栈操作
	public String pop(){
		//栈为空，返回null
		if(count==0) return null;
		//返回下标为count-1的数组元素，并且栈中元素个数count--
		String tmp = item[count-1];
		--count;
		return tmp;
	}	
}

栈的常用用途
1、函数调用
2、表达式求值
3、括号匹配

总结：
栈是一种操作受限的数据结构，只支持入栈和出栈操作。
后进先出是它最大的特点。栈既可以通过数组实现，
也可以通过链表来实现。不管基于数组还是链表，入栈、
出栈的时间复杂度都为 O(1)。除此之外，
我们还讲了一种支持动态扩容的顺序栈，
你需要重点掌握它的均摊时间复杂度分析方法。

leetcode上关于栈的题目大家可以先做20,155,232,844,224,682,496











