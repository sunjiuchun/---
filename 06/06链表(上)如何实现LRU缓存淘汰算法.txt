链表:Linked list
如何用链表来实现LRU缓存淘汰策略？

实际开发中，从链表中删除一个数据的情况
1、删除节点中，值等于某个给定值的节点
2、删除给定指针指向的节点

实现方法：维护一个有序单链表，越靠近链表尾部的节点越早被访问
当有一个新数据被访问是，从链表头开始顺序遍历链表

1、如果数据存在于链表中，遍历得到数据节点，删除，
再插入到链表的头部
2、如果此数据不存在
· 此时缓存未满，则将此节点直接插入到链表头部
· 缓存已满，删除为节点，新节点插入链表头部

继续优化：散列表